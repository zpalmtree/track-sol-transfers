{"version":3,"sources":["img/genesysgologo.png","img/rug-scene-investigation-logo.png","img/slug-logo.svg","App.tsx","index.tsx"],"names":["BATCH_SIZE","StyledTableCell","withStyles","theme","root","color","fontSize","textTransform","head","body","TableCell","AddressTableCell","fontFamily","useRowStyles","makeStyles","borderBottom","useIconStyles","sleep","ms","Promise","resolve","setTimeout","getTransaction","connection","signature","setLogMessage","ownerAddress","a","commitment","tx","meta","err","keys","transaction","message","accountKeys","solBefore","preBalances","solAfter","postBalances","changes","length","SystemProgram","programId","i","key","before","after","toString","change","push","address","formatAddress","substr","formatSOL","amount","LAMPORTS_PER_SOL","toFixed","Amount","props","align","style","Transaction","target","sender","receiver","display","flexDirection","marginTop","marginRight","href","textDecoration","Row","row","handleExpand","classes","iconClasses","TableRow","className","IconButton","aria-label","size","onClick","expanded","total","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","marginBottom","transactions","sort","b","Math","abs","map","App","React","useState","rpc","setRpc","setAddress","logMessage","finding","setFinding","setTransactions","cancel","useRef","newTransactions","_","Connection","confirmTransactionInitialTimeout","pubKey","PublicKey","signatures","beforeSignature","undefined","current","getConfirmedSignaturesForAddress2","newSignatures","concat","s","movementMap","Map","itemsRemaining","min","processing","j","item","sig","all","results","result","addressData","get","set","collated","values","useEffect","findTransactions","alignItems","justifyContent","alt","src","RugSceneInvestigationLogo","width","value","onChange","e","backgroundColor","border","padding","borderRadius","TableContainer","component","Table","TableHead","TableBody","marginLeft","textAlign","SlugLogo","height","GenesysGoLogo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae658611.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/genesysgologo.a5ac975b.png\";","export default __webpack_public_path__ + \"static/media/rug-scene-investigation-logo.0997e776.png\";","export default __webpack_public_path__ + \"static/media/slug-logo.13b7010f.svg\";","import React, { Dispatch, SetStateAction } from 'react';\nimport { LAMPORTS_PER_SOL, Connection, PublicKey, SystemProgram } from '@solana/web3.js';\nimport Collapse from '@material-ui/core/Collapse';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport IconButton from '@material-ui/core/IconButton';\nimport * as _ from 'lodash';\nimport GenesysGoLogo from './img/genesysgologo.png';\nimport RugSceneInvestigationLogo from './img/rug-scene-investigation-logo.png';\nimport SlugLogo from './img/slug-logo.svg';\n\nimport './App.css';\n\nconst RPC_URL = 'https://ssc-dao.genesysgo.net/';\nconst BATCH_SIZE = 20;\n\nconst StyledTableCell = withStyles((theme) => ({\n    root: {\n        color: 'white',\n        fontSize: '20px',\n        textTransform: 'none',\n    },\n    head: {\n        fontSize: '30px',\n    },\n    body: {\n        fontSize: '26px',\n    }\n}))(TableCell);\n\nconst AddressTableCell = withStyles((theme) => ({\n    root: {\n        fontSize: '20px',\n        fontFamily: 'RobotoMono',\n    }\n}))(StyledTableCell)\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nconst useIconStyles = makeStyles({\n    root: {\n        color: 'white',\n    }\n});\n\ninterface ITransaction {\n    amount: number;\n    signature: string;\n}\n\ninterface IRow {\n    expanded: boolean;\n    total: number;\n    transactions: ITransaction[];\n    address: string;\n}\n\ninterface IRowProps {\n    handleExpand: (address: string) => void;\n    row: IRow;\n    target: string;\n}\n\ninterface IAmountProps {\n    amount: number;\n}\n\ninterface ITransactionProps {\n    address: string;\n    tx: ITransaction;\n    target: string;\n}\n\nfunction sleep(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function getTransaction(\n    connection: Connection,\n    signature: string,\n    setLogMessage: Dispatch<SetStateAction<string>>,\n    ownerAddress: PublicKey) {\n\n    while (true) {\n        try {\n            const tx = await connection.getTransaction(signature, { commitment: 'confirmed' });\n\n            if (!tx || !tx.meta) {\n                return;\n            }\n\n            if (tx.meta.err) {\n                return;\n            }\n\n            const keys = tx.transaction.message.accountKeys;\n\n            const solBefore = tx.meta.preBalances;\n            const solAfter = tx.meta.postBalances;\n\n            const changes = [];\n\n            if (keys.length !== 3 && keys[2] !== SystemProgram.programId) {\n                return;\n            }\n\n            let i = 0;\n\n            for (const key of keys) {\n                const before = solBefore[i];\n                const after = solAfter[i];\n\n                i++;\n\n                if (key.toString() === ownerAddress.toString()) {\n                    continue;\n                }\n                \n                if (before === after) {\n                    continue;\n                }\n\n                const change = after - before;\n\n                changes.push({\n                    address: key.toString(),\n                    change,\n                    signature,\n                });\n            }\n\n            return changes;\n        } catch (err) {\n            setLogMessage(`Error fetching transaction: ${(err as any).toString()}, retrying in 1 second...`);\n            sleep(1000);\n            continue;\n        }\n    }\n}\n\nfunction formatAddress(address: string) {\n    return address.substr(0, 4) + '..' + address.substr(address.length - 4);\n}\n\nfunction formatSOL(amount: number) {\n    return (amount / LAMPORTS_PER_SOL).toFixed(2);\n}\n\nfunction Amount(props: IAmountProps) {\n    const {\n        amount,\n    } = props;\n\n    return (\n        <StyledTableCell align=\"center\" style={{ color: amount > 0 ? '#4BB543' : 'red' }}>\n            {`${formatSOL(amount)} SOL`}\n        </StyledTableCell>\n    );\n}\n\nfunction Transaction(props: ITransactionProps) {\n    const {\n        tx,\n        target,\n        address,\n    } = props;\n\n    const sender = tx.amount > 0 ? target : address;\n    const receiver = tx.amount > 0 ? address : target;\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', marginTop: '20px' }}>\n            <span style={{ color: 'white', fontFamily: 'RobotoMono', marginRight: '10px' }}>\n                {`${formatAddress(sender)} → ${formatAddress(receiver)}`}\n            </span>\n\n            <a href={`https://solscan.io/tx/${tx.signature}`} style={{ color: 'white', fontFamily: 'RobotoMono', marginTop: '5px', textDecoration: 'none' }}>\n                {tx.signature}\n            </a>\n\n            <span style={{ fontFamily: 'RobotoMono', marginRight: '10px', color: tx.amount > 0 ? '#4BB543' : 'red' }}>\n                {`${formatSOL(tx.amount)} SOL`}\n            </span>\n\n        </div>\n    );\n}\n\nfunction Row(props: IRowProps) {\n    const {\n        row,\n        handleExpand,\n        target,\n    } = props;\n\n    const classes = useRowStyles();\n    const iconClasses = useIconStyles();\n\n    return (\n        <>\n            <TableRow key={row.address} className={classes.root}>\n                <StyledTableCell align=\"center\">\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => handleExpand(row.address)}>\n                        <span style={{ color: 'white', fontSize: '20px', marginRight: '5px' }}>\n                            {row.expanded ? 'Collapse' : 'Expand' }\n                        </span>\n                        {row.expanded\n                            ? <KeyboardArrowUpIcon className={iconClasses.root}/>\n                            : <KeyboardArrowDownIcon className={iconClasses.root}/>}\n                    </IconButton>\n                </StyledTableCell>\n                <AddressTableCell align=\"center\">{row.address}</AddressTableCell>\n                <Amount amount={row.total}/>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                    <Collapse in={row.expanded} timeout=\"auto\" unmountOnExit>\n                        <div style={{ display: 'flex', flexDirection: 'column', marginBottom: '10px' }}>\n                            {row.transactions.sort((a, b) => Math.abs(b.amount) - Math.abs(a.amount)).map((tx) => (\n                                <Transaction\n                                    tx={tx}\n                                    target={target}\n                                    address={row.address}\n                                />\n                            ))}\n                        </div>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n}\n\nfunction App() {\n    const [rpc, setRpc] = React.useState<string>(RPC_URL);\n    const [address, setAddress] = React.useState<string>('');\n    const [logMessage, setLogMessage] = React.useState<string>('');\n    const [finding, setFinding] = React.useState<boolean>(false);\n    const [transactions, setTransactions] = React.useState<IRow[]>([]);\n\n    const cancel = React.useRef(false);\n\n    function handleExpand(address: string) {\n        const newTransactions = _.cloneDeep(transactions);\n\n        for (const tx of newTransactions) {\n            if (tx.address === address) {\n                tx.expanded = !tx.expanded;\n            }\n        }\n\n        setTransactions(newTransactions);\n    }\n\n    function handleRpcChange(e: React.ChangeEvent<HTMLInputElement>) {\n        setRpc(e.target.value);\n    }\n\n    function handleAddressChange(e: React.ChangeEvent<HTMLInputElement>) {\n        setAddress(e.target.value);\n    }\n\n    function handleToggleFind() {\n        if (!address) {\n            setLogMessage('No address given');\n            return;\n        }\n\n        if (finding) {\n            setLogMessage('Cancelled.');\n        }\n\n        setFinding((finding) => !finding);\n    }\n\n    async function findTransactions() {\n        setTransactions([]);\n\n        const connection = new Connection(rpc, {\n            confirmTransactionInitialTimeout: 60 * 1000,\n        });\n\n        const pubKey = new PublicKey(address);\n\n        let signatures: string[] = [];\n\n        let beforeSignature = undefined;\n\n        while (true) {\n            if (cancel.current) {\n                return;\n            }\n\n            try {\n                const newSignatures = await connection.getConfirmedSignaturesForAddress2(pubKey, {\n                    before: beforeSignature,\n                });\n\n                if (newSignatures.length === 0) {\n                    setLogMessage(`Finished collecting ${signatures.length} signatures.`);\n                    break;\n                }\n\n                signatures = signatures.concat(newSignatures.map((s) => s.signature));\n\n                setLogMessage(`Collected ${signatures.length} signatures...`);\n\n                /* Just so the log message actually gets written to the screen */\n                await sleep(10);\n\n                beforeSignature = signatures[signatures.length - 1];\n            } catch (err) {\n                setLogMessage(`Failed to collect signatures, retrying in 1 second...`);\n                await sleep(1000);\n                continue;\n            }\n        }\n\n        const movementMap = new Map();\n\n        for (let i = 0; i < signatures.length / BATCH_SIZE; i++) {\n            if (cancel.current) {\n                return;\n            }\n\n            const itemsRemaining = Math.min(BATCH_SIZE, signatures.length - i * BATCH_SIZE);\n            \n            const processing = [];\n\n            for (let j = 0; j < itemsRemaining; j++) {\n                const item = i * BATCH_SIZE + j;\n\n                setLogMessage(`Collecting transaction ${item+1} of ${signatures.length}...`);\n\n                /* Just so the log message actually gets written to the screen */\n                await sleep(10);\n\n                const sig = signatures[item];\n\n                processing.push(getTransaction(connection, sig, setLogMessage, pubKey));\n            }\n\n            const results = await Promise.all(processing);\n\n            for (const result of results) {\n                if (!result) {\n                    continue;\n                }\n\n                if (result.length === 0) {\n                    continue;\n                }\n\n                for (const change of result) {\n                    const addressData = movementMap.get(change.address) || {\n                        total: 0,\n                        transactions: [],\n                        address: change.address,\n                        expanded: false,\n                    };\n\n                    addressData.transactions.push({\n                        signature: change.signature,\n                        amount: change.change,\n                    });\n\n                    addressData.total += change.change;\n\n                    movementMap.set(change.address, addressData);\n                }\n            }\n        }\n\n        const collated = [...movementMap.values()].sort((a, b) => Math.abs(b.total) - Math.abs(a.total));\n\n        setTransactions(collated);\n\n        setLogMessage(`Finished fetching transactions.`);\n\n        setFinding(false);\n    }\n\n    React.useEffect(() => {\n        if (!finding) {\n            cancel.current = true;\n            return;\n        }\n\n        cancel.current = false;\n\n        setLogMessage('Finding transactions...');\n\n        findTransactions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [finding]);\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n            <img\n                alt='rug-scene-logo'\n                src={RugSceneInvestigationLogo}\n                style={{\n                    width: '256px',\n                }}\n            />\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <label style={{ marginRight: '10px', fontSize: '26px', color: 'white', width: '120px', textTransform: 'uppercase' }}>\n                    RPC URL\n                </label>\n\n                <input value={rpc} style={{ width: '600px', fontSize: '20px' }} onChange={handleRpcChange}>\n                </input>\n            </div>\n\n            <div style={{ marginTop: '20px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <label style={{ marginRight: '10px', fontSize: '26px', color: 'white', width: '120px', textTransform: 'uppercase' }}>\n                    Address\n                </label>\n\n                <input value={address} style={{ width: '600px', fontSize: '20px' }} onChange={handleAddressChange}/>\n            </div>\n\n            <button\n                style={{\n                    width: '300px',\n                    marginTop: '30px',\n                    fontSize: '26px',\n                    textTransform: 'uppercase',\n                    color: 'white',\n                    backgroundColor: '#a768fd',\n                    border: 'none',\n                    padding: '5px',\n                    borderRadius: '5px',\n                    fontFamily: 'RobotoMono',\n                }}\n                onClick={handleToggleFind}\n            >\n                {finding ? 'Cancel' : 'Find Transactions'}\n            </button>\n\n            <div style={{ width: '90%', marginTop: '40px' }}>\n                <TableContainer component='div'>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align=\"center\" style={{ width: '300px' }}>\n                                    Transactions\n                                </StyledTableCell>\n                                <StyledTableCell align=\"center\">\n                                    Address\n                                </StyledTableCell>\n                                <StyledTableCell align=\"center\" style={{ width: '300px' }}>\n                                    Address Gained/Lost\n                                </StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {transactions.map((row) => (\n                                <Row\n                                    row={row}\n                                    target={address}\n                                    handleExpand={handleExpand}\n                                />\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n\n            <span style={{ marginTop: '30px', fontSize: '30px', color: 'white', marginBottom: '20px' }}>\n                {logMessage}\n            </span>\n\n            <div style={{ marginTop: '100px', display: 'flex' }}>\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginLeft: '20px', marginRight: '20px' }}>\n                    <span style={{ color: 'white', width: '128px', textAlign: 'center' }}>\n                        Created by\n                    </span>\n                    <div\n                        className='logo-container'\n                        style={{\n                            marginTop: '10px',\n                        }}\n                    >\n                        <img\n                            alt='solslugs-logo'\n                            src={SlugLogo}\n                            style={{\n                                height: '64px',\n                                padding: '10px',\n                            }}\n                        />\n                    </div>\n                </div>\n\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginLeft: '20px', marginRight: '20px' }}>\n                    <span style={{ color: 'white' }}>\n                        Powered by\n                    </span>\n                    <div\n                        className='logo-container'\n                        style={{\n                            marginTop: '10px',\n                        }}\n                    >\n                        <img\n                            alt='genesysgo-logo'\n                            src={GenesysGoLogo}\n                            style={{\n                                height: '64px',\n                                padding: '10px',\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}